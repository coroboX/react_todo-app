{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","components/Header/Header.js","components/TodoApp/TodoApp.js","api/todos.js","App.js","index.js"],"names":["TodoItem","state","editing","todoEditingValue","props","todo","title","todoInput","React","createRef","focusTodoInput","inputNode","current","focus","handleBlur","onSaveEdit","id","setState","prevState","handleInputEdit","event","key","onEdit","onInputTodoTitle","value","target","this","onStatus","onRemove","completed","className","cn","type","checked","onChange","htmlFor","onDoubleClick","onClick","ref","onKeyDown","onBlur","Component","TodosList","todos","filter","filteredTodos","map","handleFilter","callFilter","criteria","preventDefault","TodosFilter","activeTodos","onFilter","onRemoveCompleted","href","selected","Header","todoName","onHandleKeydown","onSaveInput","placeholder","TodoApp","onStatusAll","length","userId","isTodoChanged","App","onUpdate","reduce","counter","getTodosFromApi","localStorage","getItem","JSON","parse","todosFromServer","onTodoStatus","onTodoStatusAll","handleSaveEdit","trim","search","addNewTodo","uuid","prevProps","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a40a1546.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport cn from 'classnames';\nimport './TodoItem.css';\n\nexport class TodoItem extends React.Component {\n  state = {\n    editing: false,\n    todoEditingValue: this.props.todo.title,\n  };\n\n  todoInput = React.createRef();\n\n  componentDidUpdate() {\n    if (this.state.editing) {\n      this.focusTodoInput();\n    }\n  }\n\n  focusTodoInput = () => {\n    const inputNode = this.todoInput;\n\n    if (inputNode) {\n      inputNode.current.focus();\n    }\n  }\n\n  handleBlur = () => {\n    const {\n      onSaveEdit,\n      todo,\n    } = this.props;\n\n    onSaveEdit(this.state.todoEditingValue, todo.id);\n\n    this.setState(prevState => ({\n      ...prevState,\n      editing: false,\n    }));\n  }\n\n  handleInputEdit = (event) => {\n    const {\n      onSaveEdit,\n      todo,\n    } = this.props;\n\n    if (event.key === 'Escape') {\n      this.setState(prevState => ({\n        ...prevState,\n        todoEditingValue: todo.title,\n        editing: false,\n      }));\n    } else if (event.key === 'Enter') {\n      onSaveEdit(this.state.todoEditingValue, todo.id);\n\n      this.setState(prevState => ({\n        ...prevState,\n        editing: false,\n      }));\n    }\n  };\n\n  onEdit = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      editing: true,\n    }));\n  };\n\n  onInputTodoTitle = (event) => {\n    const { target: { value } } = event;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todoEditingValue: value,\n    }));\n  };\n\n  render() {\n    const {\n      todo,\n      onStatus,\n      onRemove,\n    } = this.props;\n    const {\n      id,\n      title,\n      completed,\n    } = todo;\n\n    return (\n      <li\n        className={cn('item', { completed }, { editing: this.state.editing })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={id}\n            checked={completed}\n            onChange={() => onStatus(id)}\n          />\n          <label\n            htmlFor={id}\n            onDoubleClick={this.onEdit}\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onRemove(id)}\n          />\n        </div>\n        <input\n          ref={this.todoInput}\n          type=\"text\"\n          className=\"input edit\"\n          value={this.state.todoEditingValue}\n          onKeyDown={this.handleInputEdit}\n          onChange={this.onInputTodoTitle}\n          onBlur={this.handleBlur}\n        />\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onStatus: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSaveEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodosList = (props) => {\n  const {\n    todos,\n    filter,\n    onStatus,\n    onRemove,\n    onSaveEdit,\n  } = props;\n\n  const filteredTodos = todos.filter((todo) => {\n    if (filter === 'active') {\n      return !todo.completed;\n    }\n\n    if (filter === 'completed') {\n      return todo.completed;\n    }\n\n    return true;\n  });\n\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onStatus={onStatus}\n          onRemove={onRemove}\n          onSaveEdit={onSaveEdit}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodosList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onStatus: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSaveEdit: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './TodoFilter.css';\n\nconst handleFilter = (event, callFilter, criteria) => {\n  event.preventDefault();\n  callFilter(criteria);\n};\n\nexport const TodosFilter = (props) => {\n  const {\n    activeTodos,\n    onFilter,\n    filter,\n    onRemoveCompleted,\n  } = props;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${activeTodos} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={cn({ selected: (filter === 'all') })}\n            onClick={event => handleFilter(event, onFilter, 'all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={cn({ selected: (filter === 'active') })}\n            onClick={event => handleFilter(event, onFilter, 'active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={cn({ selected: (filter === 'completed') })}\n            onClick={event => handleFilter(event, onFilter, 'completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={onRemoveCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nTodosFilter.propTypes = {\n  activeTodos: PropTypes.number.isRequired,\n  onFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  onRemoveCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport './Header.css';\n\nexport class Header extends React.Component {\n  state = {\n    todoName: '',\n  }\n\n  onChange = (event) => {\n    const { target: { value } } = event;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todoName: value,\n    }));\n  };\n\n  onHandleKeydown = (event) => {\n    const {\n      onSaveInput,\n    } = this.props;\n    const {\n      todoName,\n    } = this.state;\n\n    if (event.key === 'Enter') {\n      onSaveInput(todoName);\n      this.setState(prevState => ({\n        ...prevState,\n        todoName: '',\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <header className=\"todoapp__header header\">\n        <h1>todos</h1>\n        <input\n          type=\"text\"\n          className=\"input new-todo\"\n          value={this.state.todoName}\n          placeholder=\"What needs to be done?\"\n          onKeyDown={this.onHandleKeydown}\n          onChange={this.onChange}\n        />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onSaveInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { TodosList } from '../TodoList/TodoList';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\nimport { Header } from '../Header/Header';\nimport './TodoApp.css';\n\nexport const TodoApp = (props) => {\n  const {\n    todos,\n    activeTodos,\n    filter,\n    onStatus,\n    onRemove,\n    onSaveEdit,\n    onStatusAll,\n    onFilter,\n    onRemoveCompleted,\n    onSaveInput,\n  } = props;\n\n  return (\n    <section className=\"todoapp\">\n      <Header\n        onSaveInput={onSaveInput}\n      />\n\n      <section className=\"todoapp__main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"todoapp__toggle-all\"\n          onChange={onStatusAll}\n        />\n        <label\n          htmlFor=\"toggle-all\"\n          className=\"todoapp__mark\"\n        >\n          Mark all as complete\n        </label>\n        <TodosList\n          todos={todos}\n          filter={filter}\n          onStatus={onStatus}\n          onRemove={onRemove}\n          onSaveEdit={onSaveEdit}\n        />\n      </section>\n\n      {\n        todos.length > 0\n        && (\n          <TodosFilter\n            activeTodos={activeTodos}\n            onFilter={onFilter}\n            filter={filter}\n            onRemoveCompleted={onRemoveCompleted}\n          />\n        )\n      }\n    </section>\n  );\n};\n\nTodoApp.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  activeTodos: PropTypes.number.isRequired,\n  onStatus: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSaveEdit: PropTypes.func.isRequired,\n  onStatusAll: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n  onRemoveCompleted: PropTypes.func.isRequired,\n  onSaveInput: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","const todos = [\n  {\n    userId: 1,\n    id: '1',\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: '2',\n    title: 'quis ut nam facilis et officia qui',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: '3',\n    title: 'fugiat veniam minus',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport uuid from 'react-uuid';\nimport { TodoApp } from './components/TodoApp/TodoApp';\nimport todosFromServer from './api/todos';\n\nconst isTodoChanged = (todo, id) => {\n  if (todo.id === id) {\n    return {\n      ...todo,\n      completed: !todo.completed,\n    };\n  }\n\n  return todo;\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filter: 'all',\n    activeTodos: 0,\n  }\n\n  componentDidMount() {\n    this.getTodosFromApi();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.todos !== prevState.todos) {\n      this.onUpdate();\n      localStorage.setItem('todoItems', JSON.stringify(this.state.todos));\n    }\n  }\n\n  onUpdate = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      activeTodos: prevState.todos\n        .reduce((counter, todo) => (\n          counter + (todo.completed ? 0 : 1)\n        ), 0),\n    }));\n  };\n\n  getTodosFromApi = () => {\n    if (localStorage.getItem('todoItems')) {\n      this.setState({\n        todos: JSON.parse(localStorage.getItem('todoItems')),\n      });\n    } else {\n      this.setState({\n        todos: todosFromServer,\n      });\n    }\n  };\n\n  onTodoStatus = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .map(todo => isTodoChanged(todo, id)),\n    }));\n  };\n\n  onTodoStatusAll = (event) => {\n    const { target: { checked } } = event;\n\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .map(todo => (\n          {\n            ...todo,\n            completed: checked,\n          }\n        )),\n    }));\n  };\n\n  onRemove = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .filter(todo => (todo.id !== id)),\n    }));\n  };\n\n  onFilter = (criteria) => {\n    this.setState(prevState => ({\n      ...prevState,\n      filter: criteria,\n    }));\n  };\n\n  onRemoveCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos\n        .filter(todo => (!todo.completed)),\n    }));\n  };\n\n  handleSaveEdit = (value, id) => {\n    const isValueValid = value.trim().search(/\\S/) !== -1;\n\n    if (isValueValid) {\n      this.setState(prevState => ({\n        ...prevState,\n        todos: prevState.todos\n          .map(todo => (\n            todo.id === id\n              ? ({\n                ...todo,\n                title: value,\n              })\n              : (\n                todo\n              )\n          )),\n      }));\n    } else {\n      this.onRemove(id);\n    }\n  };\n\n  addNewTodo = (todoName) => {\n    const isNameValid = todoName.trim().search(/\\S/) !== -1;\n\n    if (isNameValid) {\n      this.setState(prevState => ({\n        todos: [\n          {\n            userId: 1,\n            id: uuid(),\n            title: todoName,\n            completed: false,\n          },\n          ...prevState.todos,\n        ],\n      }));\n    }\n  }\n\n  render() {\n    const {\n      todos,\n      activeTodos,\n      filter,\n    } = this.state;\n\n    return (\n      <TodoApp\n        todos={todos}\n        activeTodos={activeTodos}\n        filter={filter}\n        onStatus={this.onTodoStatus}\n        onRemove={this.onRemove}\n        onSaveEdit={this.handleSaveEdit}\n        onStatusAll={this.onTodoStatusAll}\n        onFilter={this.onFilter}\n        onRemoveCompleted={this.onRemoveCompleted}\n        onSaveInput={this.addNewTodo}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}